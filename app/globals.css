@import "tailwindcss";

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground: #000;
  --background: #fff;
  --color-white: #fff;
  --color-black: #000;
  --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  --default-transition-duration: 150ms;
  --spacing: 0.25rem;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground: #fff;
    --background: #000;
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  margin: 0;
  padding: 0;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif;
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.1);
}

::-webkit-scrollbar-thumb {
  background: rgba(59, 130, 246, 0.7);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(59, 130, 246, 0.9);
}

/* Custom animations */
@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

.animate-pulse-slow {
  animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* Add these animations to the end of your globals.css file */

@keyframes confettiFall {
  0% {
    transform: translateY(-100vh) rotate(0deg);
  }
  100% {
    transform: translateY(100vh) rotate(360deg);
  }
}

.confetti {
  position: absolute;
  top: -20px;
  width: 10px;
  height: 10px;
  border-radius: 2px;
  animation: confettiFall linear forwards;
}

.bg-grid {
  background-size: 20px 20px;
  background-image: 
    linear-gradient(to right, rgba(255, 255, 255, 0.05) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
}

/* Glowing effect for active elements */
.glow-on-hover {
  transition: all 0.3s;
}

.glow-on-hover:hover {
  box-shadow: 0 0 15px rgba(59, 130, 246, 0.6);
}

/* Add these new animations to globals.css */
@keyframes float {
  0% {
    transform: translateY(0) translateX(0);
    opacity: 0;
  }
  50% {
    opacity: 0.8;
  }
  100% {
    transform: translateY(-20px) translateX(10px);
    opacity: 0;
  }
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

.animation-delay-300 {
  animation-delay: 300ms;
}

.animation-delay-700 {
  animation-delay: 700ms;
}

.animation-delay-1000 {
  animation-delay: 1000ms;
}

/* Mobile optimizations */
@media (max-width: 640px) {
  h1 {
    font-size: 1.75rem !important;
  }
  
  h2 {
    font-size: 1.5rem !important;
  }
  
  h3 {
    font-size: 1.25rem !important;
  }
  
  p {
    font-size: 0.9375rem !important;
  }
  
  .container {
    padding-left: 0.75rem;
    padding-right: 0.75rem;
  }
  
  /* Improve touch targets */
  button, a {
    min-height: 42px;
    min-width: 42px;
  }
  
  /* Reduce animation intensity on mobile for better performance */
  .animate-pulse-slow {
    animation-duration: 4s;
  }
}

/* Responsive container class */
.container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

/* Make touch scrolling smooth on iOS */
* {
  -webkit-overflow-scrolling: touch;
}

/* Better handling of overflow on mobile */
html, body {
  overflow-x: hidden;
  max-width: 100vw;
}

/* Remove these styles as we're using inline Tailwind classes instead */
/* Fix for the tab indicator circles */
.active-tab-indicator {
  display: none; /* Hide this class completely */
}

/* Make sure mobile menu indicators are visible */
@media (max-width: 768px) {
  .active-tab-indicator-mobile {
    display: none; /* Hide this class completely */
  }
}

/* Remove any conflicting styles that might hide the indicator */
nav a[aria-current="page"]::after,
nav a.active::after {
  display: none; /* Hide these pseudo-elements */
}

/* Add this to the end of your globals.css file */

/* Target all indicator dots - much more comprehensive targeting */
.absolute.bottom-0.left-1\/2.-translate-x-1\/2.w-2.h-2.rounded-full.bg-blue-400,
.absolute.-bottom-2.left-1\/2.-translate-x-1\/2.w-2.h-2.rounded-full.bg-blue-400,
nav span.absolute[class*="rounded-full"][class*="bg-blue"],
nav a span.absolute[class*="rounded-full"],
.absolute.left-0.top-1\/2.-translate-y-1\/2.w-1.h-1\/2.bg-blue-400,
span.w-1\.5.h-1\.5.rounded-full.bg-blue-400,
span.w-2.h-2.rounded-full.bg-blue-400,
.absolute:is([class*="bottom"]):is([class*="left-1/2"]):is([class*="rounded-full"]):is([class*="bg-blue"]) {
  display: none !important;
  opacity: 0 !important;
  visibility: hidden !important;
  pointer-events: none !important;
  width: 0 !important;
  height: 0 !important;
}

/* Specifically target any small rounded blue elements */
[class*="rounded-full"][class*="bg-blue"]:not(.w-8):not(.w-10):not(.w-12):not(.h-8):not(.h-10):not(.h-12) {
  display: none !important;
}

/* Target small rounded elements with specific positioning */
.absolute.left-1\/2.-translate-x-1\/2:is([class*="bottom"]) {
  display: none !important;
}